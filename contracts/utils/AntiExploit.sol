// SPDX-License-Identifier: SEE LICENSE IN LICENSE
pragma solidity ^0.8.2;

contract AntiExploit {

    address public admin;

    constructor(address _admin) {
        admin = _admin;
    }

    mapping(address => uint256) public lastExplorationTime;

    function canExplore(address player) public view returns (bool) {
        return block.timestamp >= lastExplorationTime[player] + 1 hours;
    }

    function updateExplorationTime(address player) public onlyAdmin() {
        lastExplorationTime[player] = block.timestamp;
    }

    function ExplorationTime() public view returns (uint256) {
        return block.timestamp;
    }

    function ResetExplorationTime() public {
        lastExplorationTime[msg.sender] = 0;
    }

    modifier onlyAdmin() {
        require(msg.sender == admin, "Only admin can call this function");
        _;
    }
}
