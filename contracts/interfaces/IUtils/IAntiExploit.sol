// SPDX-License-Identifier: SEE LICENSE IN LICENSE
pragma solidity ^0.8.2;

interface IAntiExploit {
    // Public State Variables
    function admin() external view returns (address);
    function pendingAdmin() external view returns (address);
    function cooldownPeriod() external view returns (uint256);
    function lastExplorationTime(address) external view returns (uint256);

    // Events
    event ExplorationTimeUpdated(address indexed player, uint256 timestamp);
    event ExplorationTimeReset(address indexed player);
    event NewAdminNominated(address indexed newAdmin);
    event AdminUpdated(address indexed previousAdmin, address indexed newAdmin);

    // User Functions
    function canExplore(address player) external view returns (bool);
    function getCurrentTimestamp() external view returns (uint256);

    // Admin Functions
    function updateExplorationTime(address player) external;
    function resetExplorationTime(address player) external;
    function setCooldownPeriod(uint256 newPeriod) external;
    
    // Admin Transfer Functions
    function transferAdmin(address newAdmin) external;
    function acceptAdmin() external;
}